{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_unlockTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Lock_CallerNotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Lock_CannotWithdrawYet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Lock_UnlockTimeShouldBeInTheFuture",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3a4f88e232b59eabb42bf9e43b223e7131fae2aca2555b711336d8dfef113b19",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "176735",
    "logsBloom": "0x
    "blockHash": "0x5f21f1aa0e11c4a64caa6c654ba28cc5465038f91aa40ed1c4b5dc33fbbe6a6c",
    "transactionHash": "0x3a4f88e232b59eabb42bf9e43b223e7131fae2aca2555b711336d8dfef113b19",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "176735",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1750781482
  ],
  "numDeployments": 1,
  "solcInputHash": "918272967aacf395561c776b19e8d048",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Lock_CallerNotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lock_CannotWithdrawYet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Lock_UnlockTimeShouldBeInTheFuture\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lock.sol\":\"Lock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\nlibrary Errors {\\n    error Lock_CallerNotOwner();\\n    error Lock_CannotWithdrawYet();\\n    error Lock_UnlockTimeShouldBeInTheFuture();\\n}\\n\\ncontract Lock {\\n    uint256 public unlockTime;\\n    address payable public owner;\\n\\n    event Withdrawal(uint256 amount, uint256 when);\\n\\n    constructor(uint256 _unlockTime) payable {\\n        if (block.timestamp >= _unlockTime) revert Errors.Lock_UnlockTimeShouldBeInTheFuture();\\n\\n        unlockTime = _unlockTime;\\n        owner = payable(msg.sender);\\n    }\\n\\n    function withdraw() public {\\n        // Uncomment this line, and the import of \\\"hardhat/console.sol\\\", to print a log in your\\n        // terminal\\n        // console.log(\\\"Unlock time is %o and block timestamp is %o\\\", unlockTime, block.timestamp);\\n\\n        if (block.timestamp < unlockTime) revert Errors.Lock_CannotWithdrawYet();\\n        if (msg.sender != owner) revert Errors.Lock_CallerNotOwner();\\n\\n        emit Withdrawal(address(this).balance, block.timestamp);\\n\\n        owner.transfer(address(this).balance);\\n    }\\n}\\n\",\"keccak256\":\"0x933ddee07b4f31b69b6191f8ab83cb276711ed9961e137bf553f46985d132abf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526040516101ea3803806101ea8339810160408190526100229161005c565b804210610042576040516376a4b5fb60e11b815260040160405180910390fd5b600055600180546001600160a01b03191633179055610075565b60006020828403121561006e57600080fd5b5051919050565b610166806100846000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063251c1aa3146100465780633ccfd60b146100625780638da5cb5b1461006c575b600080fd5b61004f60005481565b6040519081526020015b60405180910390f35b61006a610097565b005b60015461007f906001600160a01b031681565b6040516001600160a01b039091168152602001610059565b6000544210156100ba5760405163e27a272560e01b815260040160405180910390fd5b6001546001600160a01b031633146100e557604051631610ed8360e01b815260040160405180910390fd5b604080514781524260208201527fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93910160405180910390a16001546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610156573d6000803e3d6000fd5b5056fea164736f6c6343000813000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063251c1aa3146100465780633ccfd60b146100625780638da5cb5b1461006c575b600080fd5b61004f60005481565b6040519081526020015b60405180910390f35b61006a610097565b005b60015461007f906001600160a01b031681565b6040516001600160a01b039091168152602001610059565b6000544210156100ba5760405163e27a272560e01b815260040160405180910390fd5b6001546001600160a01b031633146100e557604051631610ed8360e01b815260040160405180910390fd5b604080514781524260208201527fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93910160405180910390a16001546040516001600160a01b03909116904780156108fc02916000818181858888f19350505050158015610156573d6000803e3d6000fd5b5056fea164736f6c6343000813000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/Lock.sol:Lock",
        "label": "unlockTime",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 12,
        "contract": "contracts/Lock.sol:Lock",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      }
    ],
    "types": {
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}